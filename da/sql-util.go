package da

const SQL_TOP_TRACKS = "SELECT s.name, s.id, s.artist, s.artistID, a.image, COUNT(*) FROM track s JOIN listen l ON s.id = l.trackID JOIN album a ON s.album = a.id WHERE username = ? AND timestamp >= ? AND timestamp <= ? GROUP BY s.id ORDER BY COUNT(*) DESC LIMIT 1000;"
const SQL_TOP_TRACKS_TIME = "SELECT s.name, s.id, s.artist, s.artistID, a.image, ROUND(COUNT(*) * s.duration / 1000) AS time FROM track s JOIN listen l ON s.id = l.trackID JOIN album a ON s.album = a.id WHERE username = ? AND timestamp >= ? AND timestamp <= ? GROUP BY s.id ORDER BY time DESC LIMIT 1000;"
const SQL_RAW_ARTISTS = "SELECT s.artist, s.artistID, s.duration FROM track s JOIN listen l ON s.id = l.trackID WHERE username = ? AND timestamp >= ? AND timestamp <= ?;"
const SQL_TOP_ALBUMS = "SELECT a.name, a.id, a.artist, a.artistID, a.image, COUNT(*) FROM track s JOIN listen l ON s.id = l.trackID JOIN album a ON s.album = a.id WHERE username = ? AND timestamp >= ? AND timestamp <= ? GROUP BY a.id ORDER BY COUNT(*) DESC LIMIT 1000;"
const SQL_TOP_ALBUMS_TIME = "SELECT a.name, a.id, a.artist, a.artistID, a.image, ROUND(SUM(x.time) / 1000) FROM (SELECT s.album, (COUNT(*) * s.duration) AS time FROM track s JOIN listen l ON s.id = l.trackID WHERE username = ? AND timestamp >= ? AND timestamp <= ? GROUP BY s.id ORDER BY time DESC) AS x JOIN album a ON x.album = a.id GROUP BY x.album ORDER BY SUM(x.time) DESC LIMIT 1000;"
const SQL_AVG_YEAR = "SELECT AVG(year) FROM track s JOIN listen l ON s.id = l.trackID JOIN album a ON s.album = a.id WHERE username = ? AND timestamp >= ? AND timestamp <= ?;"
const SQL_DECADE_BREAKDOWN = "SELECT CONCAT(FLOOR(a.year / 10) * 10, 's') AS decade, COUNT(*) FROM track s JOIN listen l ON s.id = l.trackID JOIN album a ON s.album = a.id WHERE username = ? AND timestamp >= ? AND timestamp <= ? GROUP BY decade ORDER BY COUNT(*) DESC;"
const SQL_AVG_LENGTH = "SELECT ROUND(AVG(s.duration) / 1000, 0) FROM track s JOIN listen l ON s.id = l.trackID WHERE username = ? AND timestamp >= ? AND timestamp <= ?;"
const SQL_PERCENT_EXPLICIT = "SELECT ROUND(100 * AVG(s.explicit = 1), 0) FROM track s JOIN listen l ON s.id = l.trackID WHERE l.username = ? AND timestamp >= ? AND timestamp <= ?;"
const SQL_TOTAL_TRACKS = "SELECT COUNT(*) FROM listen l WHERE username = ? AND timestamp >= ? AND timestamp <= ?;"
const SQL_UNIQUE_TRACKS = "SELECT COUNT(DISTINCT s.id) FROM track s JOIN listen l ON s.id = l.trackID WHERE username = ? AND timestamp >= ? AND timestamp <= ?;"
const SQL_UNIQUE_ALBUMS = "SELECT COUNT(DISTINCT a.id) FROM track s JOIN listen l ON s.id = l.trackID JOIN album a ON s.album = a.id WHERE username = ? AND timestamp >= ? AND timestamp <= ?;"
const SQL_MODE_YEARS = "SELECT a.year, COUNT(*) FROM track s JOIN listen l ON s.id = l.trackID JOIN album a ON s.album = a.id WHERE username = ? AND timestamp >= ? AND timestamp <= ? GROUP BY year ORDER BY COUNT(*) DESC LIMIT 3;"
const SQL_RAW_YEARS = "SELECT a.year FROM track s JOIN listen l ON s.id = l.trackID JOIN album a ON s.album = a.id WHERE username = ? AND timestamp >= ? AND timestamp <= ? ORDER BY a.year;"
const SQL_RAW_TIMESTAMPS = "SELECT l.timestamp FROM listen l WHERE username = ? AND timestamp >= ? AND timestamp <= ? ORDER BY l.timestamp;"
const SQL_AVG_POPULARITY = "SELECT s.name, s.id, s.artist, s.artistID, s.popularity FROM track s JOIN listen l ON s.id = l.trackID WHERE l.username = ? AND s.popularity = ROUND((SELECT AVG(s.popularity) FROM track s JOIN listen l ON s.id = l.trackID WHERE l.username = ? AND timestamp >= ? AND timestamp <= ?), 0) GROUP BY s.id LIMIT 3;"
const SQL_TOTAL_MINUTES = "SELECT ROUND(SUM(s.duration) / 60000) FROM track s JOIN listen l ON s.id = l.trackID WHERE username = ? AND timestamp >= ? AND timestamp <= ?;"
